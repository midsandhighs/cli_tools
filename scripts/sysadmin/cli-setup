#!/bin/sh

# set -ex

# Script for doing some preliminary setup for customizing a terminal environment
# 
# usage message for script if no opts ($0) passed 
me=`basename "$0"`
usage () {
    echo "$0 [-t] triage [-c] cli [-h] home"
    echo "[----$me----]"
    echo " triage: installs shells, tmux, vim"
    echo " cli: shells, oh-my-zsh, tmux, vim, git, vundles"
    echo " home: shells, oh-my-zsh, tmux, vim, git, vundles"
    exit 1;
}
if [[ ${#} -eq 0 ]]; then
    usage
fi
# # # # # # #
# Functions for setup steps
# # # # # # #
# 
# shells function
shells () {
    echo 'Moving shell configurations'
    cp -rv ../configs/bashprofile $HOME/.bash_profile
    cp -rv ../configs/bashrc $HOME/.bashrc
    cp -rv ../configs/zshrc $HOME/.zshrc
}
# tmux function
tmux () {
    echo 'Moving tmux configurations'
    cp -rv ../configs/tmux $HOME/.tmux.conf
}
# hammerspoon function
hammerspoon () {
    echo 'Moving hammerspoon configurations'
    cp -rv ../configs/hammerspoon $HOME/.hammerspoon/init.lua
}
# # vim install function 
vim_setup () {
    echo 'Setting up vim'
    cp ../configs/vimrc $HOME/.vimrc
    #  Verify Vundle exists, install if necessary, and upload Vundles in .vimrc
    if [[ -d "$HOME/.vim/bundle" ]]; then
        echo 'Vundle folder exists!'
        vim +PluginInstall +qall
        echo 'Vundles updated.'
    else    
        echo 'Vundle is not installed!'
        echo 'Cloning Vundle.vim'  
        git clone https://github.com/gmarik/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
        echo 'Vundle Installed!'
        vim +PluginInstall +qall
        echo 'Vundles updated.'
    fi
}
git_config_setup () {
    echo 'Configuring git'
    echo 'Copying top-level config'  
    cp ../configs/gitconfig $HOME/.gitconfig
    if [ -d $HOME/src/thd/ ]; 
        then
        echo '/src/thd/ exists! This machine has THD repos'
        echo 'copying employer git configuration'
        cp ../configs/gitconfig-thd $HOME/.gitconfig-thd
        echo 'copying personal git configuration'
        cp ../configs/gitconfig-mids $HOME/.gitconfig-mids
    else
        echo ' copying personal git configuation'
        cp ../configs/gitconfig-mids $HOME/.gitconfig-mids
    fi
}
# # # # # # #
# cli arguments
# # # # # # #
while getopts "tch" arg; do
    case "${arg}" in
        t ) # run triage setup
            echo "Setting up triage cli - shells & tmux"
            shells
            tmux
            ;;
        c ) # run cli setup
            echo "Setting up shells, tmux, and vim"
            shells
	        tmux
	        vim_setup
            git_config_setup
            ;;
        h ) # run home setup
            shells;;
        \? ) usage;;
    esac
done


# TODO: Need to properly nest the gitconfigurations for machines - dig into this later between your devices
#


# echo 'Copying iTerm settings'
# \ this may not be a good idea but might be fixed with profiles at app level \
# cp ../configs/iterm.config $HOME/Library/Preferences/com.googlecode.iterm2.plist
